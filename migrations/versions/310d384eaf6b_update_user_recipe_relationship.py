"""Update User-Recipe relationship

Revision ID: 310d384eaf6b
Revises: 
Create Date: 2024-01-24 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '310d384eaf6b'
down_revision = None
branch_labels = None
depends_on = None


def table_exists(table_name):
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    return table_name in inspector.get_table_names()


def column_exists(table_name, column_name):
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    has_column = False
    for col in inspector.get_columns(table_name):
        if col['name'] == column_name:
            has_column = True
    return has_column


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Only try to drop tables if they exist
    if table_exists('ingredient_category'):
        op.drop_table('ingredient_category')
    
    # Instead of dropping and recreating, let's just modify existing tables
    with op.batch_alter_table('recipes', schema=None) as batch_op:
        if not column_exists('recipes', 'title'):
            batch_op.add_column(sa.Column('title', sa.String(length=100), nullable=False, server_default=''))
        if not column_exists('recipes', 'description'):
            batch_op.add_column(sa.Column('description', sa.Text(), nullable=False, server_default=''))
        if not column_exists('recipes', 'instructions'):
            batch_op.add_column(sa.Column('instructions', sa.Text(), nullable=False, server_default=''))
        if not column_exists('recipes', 'prep_time'):
            batch_op.add_column(sa.Column('prep_time', sa.Integer(), nullable=False, server_default='0'))
        if not column_exists('recipes', 'cook_time'):
            batch_op.add_column(sa.Column('cook_time', sa.Integer(), nullable=False, server_default='0'))
        if not column_exists('recipes', 'servings'):
            batch_op.add_column(sa.Column('servings', sa.Integer(), nullable=False, server_default='1'))
        if not column_exists('recipes', 'difficulty'):
            batch_op.add_column(sa.Column('difficulty', sa.String(length=20), nullable=False, server_default='medium'))
        if not column_exists('recipes', 'image'):
            batch_op.add_column(sa.Column('image', sa.String(length=255), nullable=True))
        if not column_exists('recipes', 'category_id'):
            batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key('fk_recipes_category', 'categories', ['category_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        if not column_exists('users', 'username'):
            batch_op.add_column(sa.Column('username', sa.String(length=80), nullable=False, server_default=''))
        if not column_exists('users', 'email'):
            batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=False, server_default=''))
        if not column_exists('users', 'password'):
            batch_op.add_column(sa.Column('password', sa.String(length=120), nullable=False, server_default=''))
        if not column_exists('users', 'role'):
            batch_op.add_column(sa.Column('role', sa.String(length=20), nullable=False, server_default='user'))
        if not column_exists('users', 'is_active'):
            batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False, server_default='1'))

    with op.batch_alter_table('comments', schema=None) as batch_op:
        if not column_exists('comments', 'content'):
            batch_op.add_column(sa.Column('content', sa.Text(), nullable=False, server_default=''))
        if not column_exists('comments', 'created_at'):
            batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        if not column_exists('comments', 'updated_at'):
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('ingredients', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=True)
        batch_op.alter_column('unit',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'recipes', ['recipe_id'], ['id'])

    with op.batch_alter_table('recipe_ingredients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ingredient_id', sa.Integer(), nullable=False))
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.create_foreign_key('fk_recipe_ingredients_recipes', 'recipes', ['recipe_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('name')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('cook_time', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('difficulty', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('instructions',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('prep_time',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('servings',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('image',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'categories', ['category_id'], ['id'])
        batch_op.drop_column('rejection_reason')
        batch_op.drop_column('is_approved')
        batch_op.drop_column('is_reported')
        batch_op.drop_column('is_hidden')
        batch_op.drop_column('name')
        batch_op.drop_column('is_featured')
        batch_op.drop_column('category')
        batch_op.drop_column('subcategory')

    with op.batch_alter_table('shopping_list_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ingredient_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('is_checked', sa.Boolean(), nullable=True))
        batch_op.alter_column('unit',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'ingredients', ['ingredient_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('ingredient_name')
        batch_op.drop_column('recipe_id')
        batch_op.drop_column('checked')

    with op.batch_alter_table('shopping_lists', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               nullable=True,
               existing_server_default=sa.text("'user'"))
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               nullable=False)
        batch_op.alter_column('avatar',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('favorites', schema=None) as batch_op:
        batch_op.create_foreign_key('fk_favorites_recipes', 'recipes', ['recipe_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('avatar',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text("'user'"))
        batch_op.alter_column('password',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('shopping_lists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))

    with op.batch_alter_table('shopping_list_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('checked', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('recipe_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('ingredient_name', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'recipes', ['recipe_id'], ['id'])
        batch_op.alter_column('unit',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('is_checked')
        batch_op.drop_column('ingredient_id')

    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subcategory', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('category', sa.TEXT(), nullable=False))
        batch_op.add_column(sa.Column('is_featured', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True))
        batch_op.add_column(sa.Column('name', sa.TEXT(), nullable=False))
        batch_op.add_column(sa.Column('is_hidden', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True))
        batch_op.add_column(sa.Column('is_reported', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True))
        batch_op.add_column(sa.Column('is_approved', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True))
        batch_op.add_column(sa.Column('rejection_reason', sa.TEXT(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('image',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('servings',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('prep_time',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('instructions',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
        batch_op.drop_column('category_id')
        batch_op.drop_column('difficulty')
        batch_op.drop_column('cook_time')
        batch_op.drop_column('title')

    with op.batch_alter_table('recipe_ingredients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.drop_constraint('fk_recipe_ingredients_recipes', type_='foreignkey')
        batch_op.alter_column('unit',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('ingredient_id')

    with op.batch_alter_table('ingredients', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('category',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('unit',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    op.create_table('recipes_images',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('prep_time', sa.INTEGER(), nullable=True),
    sa.Column('servings', sa.INTEGER(), nullable=True),
    sa.Column('instructions', sa.TEXT(), nullable=True),
    sa.Column('image', sa.VARCHAR(length=200), nullable=True),
    sa.Column('is_reported', sa.BOOLEAN(), nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), nullable=True),
    sa.Column('is_hidden', sa.BOOLEAN(), nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ingredient_category',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('category_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('favorites', schema=None) as batch_op:
        batch_op.drop_constraint('fk_favorites_recipes', type_='foreignkey')

    # ### end Alembic commands ###
